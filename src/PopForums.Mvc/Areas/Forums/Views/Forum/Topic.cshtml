@model TopicContainer
@inject IUserRetrievalShim UserRetrievalShim
@{
	ViewBag.Title = Model.Topic.Title;
	Layout = "~/Areas/Forums/Views/Shared/PopForumsMaster.cshtml";
	var user = UserRetrievalShim.GetUser();
	var profile = UserRetrievalShim.GetProfile();
	var topicStateSerialized = JsonSerializer.Serialize(Model.TopicState, new JsonSerializerOptions{ PropertyNamingPolicy = JsonNamingPolicy.CamelCase });
}

@section HeaderContent {
    <script src="~/PopForums/lib/tinymce/tinymce.min.js" type="text/javascript" asp-append-version="true"></script>
	<script type="text/javascript">
		PopForums.currentTopicState = Object.assign(new PopForums.TopicState(), @Html.Raw(topicStateSerialized));
		PopForums.currentTopicState.setupTopic();
	</script>
}

<h1>
	@if (user != null)
	{
		<pf-subscribebutton buttonclass="btn-link text-decoration-none" subscribetext="@PopForums.Resources.Subscribe" unsubscribetext="@PopForums.Resources.Unsubscribe"></pf-subscribebutton>
		<pf-favoritebutton buttonclass="btn-link text-decoration-none" makefavoritetext="@PopForums.Resources.FavoriteMake" removefavoritetext="@PopForums.Resources.FavoriteRemove"></pf-favoritebutton>
	}
	@Model.Topic.Title
</h1>

<ul id="TopBreadcrumb" class="breadcrumb sticky-top">
	<li class="breadcrumb-item"><a asp-controller="@ForumController.Name" asp-action="Recent" asp-route-pageNumber="">@PopForums.Resources.Recent</a></li>
	<li class="breadcrumb-item"><a asp-controller="@HomeController.Name" asp-action="Index">@PopForums.Resources.Forums</a></li>
	<li class="breadcrumb-item"><a asp-controller="Forum" asp-action="Index" asp-route-urlName="@Model.Forum.UrlName" asp-route-pageNumber="">@Model.Forum.Title</a></li>
	<li class="breadcrumb-item active">@Model.Topic.Title</li>
</ul>

@if (user != null) {
	<p id="AsyncResponse"></p>
}

<pf-pagerLinks controllerName="Forum" actionName="Topic" pagerContext="@Model.PagerContext" class="pagination pagination-sm pagerLinks mt-3" moreTextClass="morePager" currentTextClass="currentPager active" />

@if (Model.PagerContext.PageIndex > 1)
{
	<pf-previouspostsbutton buttontext="@PopForums.Resources.ShowPreviousPosts" buttonclass="btn btn-primary"></pf-previouspostsbutton>
}

<div id="PostStream">

	@foreach(var post in Model.Posts) {
		@await Html.PartialAsync("~/Areas/Forums/Views/Forum/PostItem.cshtml", new PostItemContainer { Post = post, VotedPostIDs = Model.VotedPostIDs, Signatures = Model.Signatures, Avatars = Model.Avatars, User = user, Profile = profile, Topic = Model.Topic, IgnoreUserIDs = Model.IgnoreUserIDs });
	}

</div>

<p><pf-morepostsbutton buttontext="@PopForums.Resources.ShowMorePosts" buttonclass="btn btn-primary"></pf-morepostsbutton></p>

<pf-pagerLinks controllerName="Forum" actionName="Topic" pagerContext="@Model.PagerContext" class="pagination pagination-sm pagerLinks" moreTextClass="morePager" currentTextClass="currentPager active" />

<div id="StreamBottom"></div>

@if (Model.PermissionContext.UserCanPost)
{
	<div id="NewReply"></div>
	<pf-replybutton buttonclass="btn btn-primary" buttontext="@PopForums.Resources.PostReply" topicid="@Model.Topic.TopicID" postid="" overridedisplay="false"></pf-replybutton>
}
else
{
	<p class="alert alert-warning">@Model.PermissionContext.DenialReason</p>
}

@await Html.PartialAsync("ModeratorPanel", Model.Topic)