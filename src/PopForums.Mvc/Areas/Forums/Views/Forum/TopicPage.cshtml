@model TopicContainer
@inject IUserRetrievalShim UserRetrievalShim
@{
	var user = UserRetrievalShim.GetUser();
	var profile = UserRetrievalShim.GetProfile();
	var routeParameters = new Dictionary<string, object> {{"id", Model.Topic.UrlName}};
}
<div>
@foreach (var post in Model.Posts)
{
	@await Html.PartialAsync("~/Areas/Forums/Views/Forum/PostItem.cshtml", new PostItemContainer { Post = post, VotedPostIDs = Model.VotedPostIDs, Signatures = Model.Signatures, Avatars = Model.Avatars, User = user, Profile = profile, Topic = Model.Topic, IgnoreUserIDs = Model.IgnoreUserIDs});
}
<pf-pagerLinks controllerName="Forum" actionName="Topic" pagerContext="@Model.PagerContext" class="pagination pagination-sm mt-3 pagerLinks" moreTextClass="morePager" currentTextClass="page-item currentPager active" low="@ViewBag.Low" high="@ViewBag.High" routeParameters="@routeParameters" />
@Html.Hidden("LastPostID", Model.Posts.Last().PostID, new { @class = "lastPostID" })
@Html.Hidden("PageCount", Model.PagerContext.PageCount, new { @class = "pageCount" })
</div>